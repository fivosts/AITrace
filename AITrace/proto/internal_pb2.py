# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/internal.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from proto import dataset_pb2 as proto_dot_dataset__pb2
from proto import model_pb2 as proto_dot_model__pb2
from proto import sampler_pb2 as proto_dot_sampler__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='proto/internal.proto',
  package='AITrace',
  syntax='proto2',
  serialized_options=_b('\n\013com.AITraceB\rInternalProtoP\001Z\tAITracepb'),
  serialized_pb=_b('\n\x14proto/internal.proto\x12\x07\x41ITrace\x1a\x13proto/dataset.proto\x1a\x11proto/model.proto\x1a\x13proto/sampler.proto\"c\n\nCorpusMeta\x12.\n\rhecht_dataset\x18\x01 \x01(\x0b\x32\x15.AITrace.HechtDatasetH\x00\x12\x1a\n\x12preprocess_time_ms\x18\x02 \x01(\x05\x42\t\n\x07\x64\x61taset\"+\n\tModelMeta\x12\x1e\n\x06\x63onfig\x18\x01 \x01(\x0b\x32\x0e.AITrace.Model\"/\n\x0bSamplerMeta\x12 \n\x06\x63onfig\x18\x01 \x01(\x0b\x32\x10.AITrace.Sampler\"S\n\x15PreprocessorWorkerJob\x12\x16\n\x0e\x63ontentfile_id\x18\x01 \x01(\t\x12\x0b\n\x03src\x18\x02 \x01(\t\x12\x15\n\rpreprocessors\x18\x03 \x03(\t\"\xf6\x01\n\x1cPreprocessorWorkerJobOutcome\x12\x16\n\x0e\x63ontentfile_id\x18\x01 \x01(\t\x12\x10\n\x08\x63ontents\x18\x02 \x01(\t\x12<\n\x06status\x18\x03 \x01(\x0e\x32,.AITrace.PreprocessorWorkerJobOutcome.Status\"n\n\x06Status\x12\x06\n\x02OK\x10\x00\x12\x08\n\x04\x46\x41IL\x10\x01\x12\x14\n\x10\x44OES_NOT_COMPILE\x10\x02\x12\x16\n\x12TOO_FEW_CHARACTERS\x10\x03\x12\x11\n\rTOO_FEW_LINES\x10\x04\x12\x11\n\rREWRITER_FAIL\x10\x05\"s\n\x1dPreprocessorWorkerJobOutcomes\x12\x36\n\x07outcome\x18\x01 \x03(\x0b\x32%.AITrace.PreprocessorWorkerJobOutcome\x12\x1a\n\x12preprocess_time_ms\x18\x02 \x03(\x03\"V\n\x12PreprocessorWorker\x12\x18\n\x10\x63ontentfile_root\x18\x01 \x01(\t\x12\x0f\n\x07relpath\x18\x02 \x01(\t\x12\x15\n\rpreprocessors\x18\x03 \x03(\t\"c\n\rEncoderWorker\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0c\n\x04text\x18\x03 \x01(\t\x12\x1d\n\x15\x63ontentfile_separator\x18\x04 \x01(\t\x12\x19\n\x11pickled_tokenizer\x18\x05 \x01(\x0c\"\x92\x01\n\x0fJavaRewriterJob\x12\x11\n\tfile_path\x18\x01 \x01(\t\x12\x0b\n\x03src\x18\x02 \x01(\t\x12/\n\x06status\x18\x03 \x01(\x0e\x32\x1f.AITrace.JavaRewriterJob.Status\x12\x12\n\nstatus_msg\x18\x04 \x01(\t\"\x1a\n\x06Status\x12\x06\n\x02OK\x10\x00\x12\x08\n\x04\x46\x41IL\x10\x01\")\n\x08LexerJob\x12\x0e\n\x06string\x18\x01 \x01(\t\x12\r\n\x05token\x18\x02 \x03(\x05\"\xb9\x01\n\rLexerBatchJob\x12 \n\x05input\x18\x01 \x03(\x0b\x32\x11.AITrace.LexerJob\x12\x17\n\x0f\x63\x61ndidate_token\x18\x02 \x03(\t\x12:\n\nvocabulary\x18\x03 \x03(\x0b\x32&.AITrace.LexerBatchJob.VocabularyEntry\x1a\x31\n\x0fVocabularyEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x42)\n\x0b\x63om.AITraceB\rInternalProtoP\x01Z\tAITracepb')
  ,
  dependencies=[proto_dot_dataset__pb2.DESCRIPTOR,proto_dot_model__pb2.DESCRIPTOR,proto_dot_sampler__pb2.DESCRIPTOR,])



_PREPROCESSORWORKERJOBOUTCOME_STATUS = _descriptor.EnumDescriptor(
  name='Status',
  full_name='AITrace.PreprocessorWorkerJobOutcome.Status',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='OK', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FAIL', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DOES_NOT_COMPILE', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TOO_FEW_CHARACTERS', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TOO_FEW_LINES', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REWRITER_FAIL', index=5, number=5,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=511,
  serialized_end=621,
)
_sym_db.RegisterEnumDescriptor(_PREPROCESSORWORKERJOBOUTCOME_STATUS)

_JAVAREWRITERJOB_STATUS = _descriptor.EnumDescriptor(
  name='Status',
  full_name='AITrace.JavaRewriterJob.Status',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='OK', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FAIL', index=1, number=1,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=511,
  serialized_end=537,
)
_sym_db.RegisterEnumDescriptor(_JAVAREWRITERJOB_STATUS)


_CORPUSMETA = _descriptor.Descriptor(
  name='CorpusMeta',
  full_name='AITrace.CorpusMeta',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='hecht_dataset', full_name='AITrace.CorpusMeta.hecht_dataset', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='preprocess_time_ms', full_name='AITrace.CorpusMeta.preprocess_time_ms', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='dataset', full_name='AITrace.CorpusMeta.dataset',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=94,
  serialized_end=193,
)


_MODELMETA = _descriptor.Descriptor(
  name='ModelMeta',
  full_name='AITrace.ModelMeta',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='config', full_name='AITrace.ModelMeta.config', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=195,
  serialized_end=238,
)


_SAMPLERMETA = _descriptor.Descriptor(
  name='SamplerMeta',
  full_name='AITrace.SamplerMeta',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='config', full_name='AITrace.SamplerMeta.config', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=240,
  serialized_end=287,
)


_PREPROCESSORWORKERJOB = _descriptor.Descriptor(
  name='PreprocessorWorkerJob',
  full_name='AITrace.PreprocessorWorkerJob',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='contentfile_id', full_name='AITrace.PreprocessorWorkerJob.contentfile_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='src', full_name='AITrace.PreprocessorWorkerJob.src', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='preprocessors', full_name='AITrace.PreprocessorWorkerJob.preprocessors', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=289,
  serialized_end=372,
)


_PREPROCESSORWORKERJOBOUTCOME = _descriptor.Descriptor(
  name='PreprocessorWorkerJobOutcome',
  full_name='AITrace.PreprocessorWorkerJobOutcome',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='contentfile_id', full_name='AITrace.PreprocessorWorkerJobOutcome.contentfile_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='contents', full_name='AITrace.PreprocessorWorkerJobOutcome.contents', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='status', full_name='AITrace.PreprocessorWorkerJobOutcome.status', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _PREPROCESSORWORKERJOBOUTCOME_STATUS,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=375,
  serialized_end=621,
)


_PREPROCESSORWORKERJOBOUTCOMES = _descriptor.Descriptor(
  name='PreprocessorWorkerJobOutcomes',
  full_name='AITrace.PreprocessorWorkerJobOutcomes',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='outcome', full_name='AITrace.PreprocessorWorkerJobOutcomes.outcome', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='preprocess_time_ms', full_name='AITrace.PreprocessorWorkerJobOutcomes.preprocess_time_ms', index=1,
      number=2, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=623,
  serialized_end=738,
)


_PREPROCESSORWORKER = _descriptor.Descriptor(
  name='PreprocessorWorker',
  full_name='AITrace.PreprocessorWorker',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='contentfile_root', full_name='AITrace.PreprocessorWorker.contentfile_root', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='relpath', full_name='AITrace.PreprocessorWorker.relpath', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='preprocessors', full_name='AITrace.PreprocessorWorker.preprocessors', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=740,
  serialized_end=826,
)


_ENCODERWORKER = _descriptor.Descriptor(
  name='EncoderWorker',
  full_name='AITrace.EncoderWorker',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='AITrace.EncoderWorker.id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='text', full_name='AITrace.EncoderWorker.text', index=1,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='contentfile_separator', full_name='AITrace.EncoderWorker.contentfile_separator', index=2,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pickled_tokenizer', full_name='AITrace.EncoderWorker.pickled_tokenizer', index=3,
      number=5, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=828,
  serialized_end=927,
)


_JAVAREWRITERJOB = _descriptor.Descriptor(
  name='JavaRewriterJob',
  full_name='AITrace.JavaRewriterJob',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='file_path', full_name='AITrace.JavaRewriterJob.file_path', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='src', full_name='AITrace.JavaRewriterJob.src', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='status', full_name='AITrace.JavaRewriterJob.status', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='status_msg', full_name='AITrace.JavaRewriterJob.status_msg', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _JAVAREWRITERJOB_STATUS,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=930,
  serialized_end=1076,
)


_LEXERJOB = _descriptor.Descriptor(
  name='LexerJob',
  full_name='AITrace.LexerJob',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='string', full_name='AITrace.LexerJob.string', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='token', full_name='AITrace.LexerJob.token', index=1,
      number=2, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1078,
  serialized_end=1119,
)


_LEXERBATCHJOB_VOCABULARYENTRY = _descriptor.Descriptor(
  name='VocabularyEntry',
  full_name='AITrace.LexerBatchJob.VocabularyEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='AITrace.LexerBatchJob.VocabularyEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='AITrace.LexerBatchJob.VocabularyEntry.value', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('8\001'),
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1258,
  serialized_end=1307,
)

_LEXERBATCHJOB = _descriptor.Descriptor(
  name='LexerBatchJob',
  full_name='AITrace.LexerBatchJob',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='AITrace.LexerBatchJob.input', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='candidate_token', full_name='AITrace.LexerBatchJob.candidate_token', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='vocabulary', full_name='AITrace.LexerBatchJob.vocabulary', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_LEXERBATCHJOB_VOCABULARYENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1122,
  serialized_end=1307,
)

_CORPUSMETA.fields_by_name['hecht_dataset'].message_type = proto_dot_dataset__pb2._HECHTDATASET
_CORPUSMETA.oneofs_by_name['dataset'].fields.append(
  _CORPUSMETA.fields_by_name['hecht_dataset'])
_CORPUSMETA.fields_by_name['hecht_dataset'].containing_oneof = _CORPUSMETA.oneofs_by_name['dataset']
_MODELMETA.fields_by_name['config'].message_type = proto_dot_model__pb2._MODEL
_SAMPLERMETA.fields_by_name['config'].message_type = proto_dot_sampler__pb2._SAMPLER
_PREPROCESSORWORKERJOBOUTCOME.fields_by_name['status'].enum_type = _PREPROCESSORWORKERJOBOUTCOME_STATUS
_PREPROCESSORWORKERJOBOUTCOME_STATUS.containing_type = _PREPROCESSORWORKERJOBOUTCOME
_PREPROCESSORWORKERJOBOUTCOMES.fields_by_name['outcome'].message_type = _PREPROCESSORWORKERJOBOUTCOME
_JAVAREWRITERJOB.fields_by_name['status'].enum_type = _JAVAREWRITERJOB_STATUS
_JAVAREWRITERJOB_STATUS.containing_type = _JAVAREWRITERJOB
_LEXERBATCHJOB_VOCABULARYENTRY.containing_type = _LEXERBATCHJOB
_LEXERBATCHJOB.fields_by_name['input'].message_type = _LEXERJOB
_LEXERBATCHJOB.fields_by_name['vocabulary'].message_type = _LEXERBATCHJOB_VOCABULARYENTRY
DESCRIPTOR.message_types_by_name['CorpusMeta'] = _CORPUSMETA
DESCRIPTOR.message_types_by_name['ModelMeta'] = _MODELMETA
DESCRIPTOR.message_types_by_name['SamplerMeta'] = _SAMPLERMETA
DESCRIPTOR.message_types_by_name['PreprocessorWorkerJob'] = _PREPROCESSORWORKERJOB
DESCRIPTOR.message_types_by_name['PreprocessorWorkerJobOutcome'] = _PREPROCESSORWORKERJOBOUTCOME
DESCRIPTOR.message_types_by_name['PreprocessorWorkerJobOutcomes'] = _PREPROCESSORWORKERJOBOUTCOMES
DESCRIPTOR.message_types_by_name['PreprocessorWorker'] = _PREPROCESSORWORKER
DESCRIPTOR.message_types_by_name['EncoderWorker'] = _ENCODERWORKER
DESCRIPTOR.message_types_by_name['JavaRewriterJob'] = _JAVAREWRITERJOB
DESCRIPTOR.message_types_by_name['LexerJob'] = _LEXERJOB
DESCRIPTOR.message_types_by_name['LexerBatchJob'] = _LEXERBATCHJOB
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CorpusMeta = _reflection.GeneratedProtocolMessageType('CorpusMeta', (_message.Message,), dict(
  DESCRIPTOR = _CORPUSMETA,
  __module__ = 'proto.internal_pb2'
  # @@protoc_insertion_point(class_scope:AITrace.CorpusMeta)
  ))
_sym_db.RegisterMessage(CorpusMeta)

ModelMeta = _reflection.GeneratedProtocolMessageType('ModelMeta', (_message.Message,), dict(
  DESCRIPTOR = _MODELMETA,
  __module__ = 'proto.internal_pb2'
  # @@protoc_insertion_point(class_scope:AITrace.ModelMeta)
  ))
_sym_db.RegisterMessage(ModelMeta)

SamplerMeta = _reflection.GeneratedProtocolMessageType('SamplerMeta', (_message.Message,), dict(
  DESCRIPTOR = _SAMPLERMETA,
  __module__ = 'proto.internal_pb2'
  # @@protoc_insertion_point(class_scope:AITrace.SamplerMeta)
  ))
_sym_db.RegisterMessage(SamplerMeta)

PreprocessorWorkerJob = _reflection.GeneratedProtocolMessageType('PreprocessorWorkerJob', (_message.Message,), dict(
  DESCRIPTOR = _PREPROCESSORWORKERJOB,
  __module__ = 'proto.internal_pb2'
  # @@protoc_insertion_point(class_scope:AITrace.PreprocessorWorkerJob)
  ))
_sym_db.RegisterMessage(PreprocessorWorkerJob)

PreprocessorWorkerJobOutcome = _reflection.GeneratedProtocolMessageType('PreprocessorWorkerJobOutcome', (_message.Message,), dict(
  DESCRIPTOR = _PREPROCESSORWORKERJOBOUTCOME,
  __module__ = 'proto.internal_pb2'
  # @@protoc_insertion_point(class_scope:AITrace.PreprocessorWorkerJobOutcome)
  ))
_sym_db.RegisterMessage(PreprocessorWorkerJobOutcome)

PreprocessorWorkerJobOutcomes = _reflection.GeneratedProtocolMessageType('PreprocessorWorkerJobOutcomes', (_message.Message,), dict(
  DESCRIPTOR = _PREPROCESSORWORKERJOBOUTCOMES,
  __module__ = 'proto.internal_pb2'
  # @@protoc_insertion_point(class_scope:AITrace.PreprocessorWorkerJobOutcomes)
  ))
_sym_db.RegisterMessage(PreprocessorWorkerJobOutcomes)

PreprocessorWorker = _reflection.GeneratedProtocolMessageType('PreprocessorWorker', (_message.Message,), dict(
  DESCRIPTOR = _PREPROCESSORWORKER,
  __module__ = 'proto.internal_pb2'
  # @@protoc_insertion_point(class_scope:AITrace.PreprocessorWorker)
  ))
_sym_db.RegisterMessage(PreprocessorWorker)

EncoderWorker = _reflection.GeneratedProtocolMessageType('EncoderWorker', (_message.Message,), dict(
  DESCRIPTOR = _ENCODERWORKER,
  __module__ = 'proto.internal_pb2'
  # @@protoc_insertion_point(class_scope:AITrace.EncoderWorker)
  ))
_sym_db.RegisterMessage(EncoderWorker)

JavaRewriterJob = _reflection.GeneratedProtocolMessageType('JavaRewriterJob', (_message.Message,), dict(
  DESCRIPTOR = _JAVAREWRITERJOB,
  __module__ = 'proto.internal_pb2'
  # @@protoc_insertion_point(class_scope:AITrace.JavaRewriterJob)
  ))
_sym_db.RegisterMessage(JavaRewriterJob)

LexerJob = _reflection.GeneratedProtocolMessageType('LexerJob', (_message.Message,), dict(
  DESCRIPTOR = _LEXERJOB,
  __module__ = 'proto.internal_pb2'
  # @@protoc_insertion_point(class_scope:AITrace.LexerJob)
  ))
_sym_db.RegisterMessage(LexerJob)

LexerBatchJob = _reflection.GeneratedProtocolMessageType('LexerBatchJob', (_message.Message,), dict(

  VocabularyEntry = _reflection.GeneratedProtocolMessageType('VocabularyEntry', (_message.Message,), dict(
    DESCRIPTOR = _LEXERBATCHJOB_VOCABULARYENTRY,
    __module__ = 'proto.internal_pb2'
    # @@protoc_insertion_point(class_scope:AITrace.LexerBatchJob.VocabularyEntry)
    ))
  ,
  DESCRIPTOR = _LEXERBATCHJOB,
  __module__ = 'proto.internal_pb2'
  # @@protoc_insertion_point(class_scope:AITrace.LexerBatchJob)
  ))
_sym_db.RegisterMessage(LexerBatchJob)
_sym_db.RegisterMessage(LexerBatchJob.VocabularyEntry)


DESCRIPTOR._options = None
_LEXERBATCHJOB_VOCABULARYENTRY._options = None
# @@protoc_insertion_point(module_scope)
